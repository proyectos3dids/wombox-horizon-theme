{% doc %}
  @prompt
    Generate a section exactly the same of this one "Featured collection: Carousel" but adding also the functionality of having arrows and scrolling with the arrows inside the image of the product card. Maintain all the other personalisation functionalities

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-featured-collection-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding_top }}px 0 {{ block.settings.section_padding_bottom }}px;
    background-color: {{ block.settings.background_color }};
  }

  .ai-featured-collection__container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-featured-collection__header-{{ ai_gen_id }} {
    text-align: {{ block.settings.heading_alignment }};
    margin-bottom: {{ block.settings.heading_spacing }}px;
  }

  .ai-featured-collection__title-{{ ai_gen_id }} {
    color: {{ block.settings.heading_color }};
    font-size: {{ block.settings.heading_size }}px;
    margin: 0 0 10px;
  }

  .ai-featured-collection__description-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.description_size }}px;
    margin: 0;
  }

  .ai-featured-collection__carousel-container-{{ ai_gen_id }} {
    position: relative;
    overflow: hidden;
  }

  .ai-featured-collection__carousel-{{ ai_gen_id }} {
    display: flex;
    gap: {{ block.settings.product_spacing }}px;
    transition: transform 0.3s ease;
    will-change: transform;
  }

  .ai-featured-collection__product-card-{{ ai_gen_id }} {
    flex: 0 0 calc((100% - {{ block.settings.product_spacing | times: block.settings.products_per_row | minus: 1 }}px) / {{ block.settings.products_per_row }});
    background-color: {{ block.settings.card_background }};
    border-radius: {{ block.settings.card_border_radius }}px;
    overflow: hidden;
    position: relative;
  }

  .ai-featured-collection__product-image-container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    aspect-ratio: {{ block.settings.image_aspect_ratio }};
    overflow: hidden;
    background-color: #f4f4f4;
  }

  .ai-featured-collection__product-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .ai-featured-collection__product-image-container-{{ ai_gen_id }}:hover .ai-featured-collection__product-image-{{ ai_gen_id }} {
    transform: scale(1.05);
  }

  .ai-featured-collection__image-nav-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 50%;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 2;
  }

  .ai-featured-collection__product-image-container-{{ ai_gen_id }}:hover .ai-featured-collection__image-nav-{{ ai_gen_id }} {
    opacity: 1;
  }

  .ai-featured-collection__image-nav-{{ ai_gen_id }}:hover {
    background-color: rgba(255, 255, 255, 1);
  }

  .ai-featured-collection__image-nav--prev-{{ ai_gen_id }} {
    left: 10px;
  }

  .ai-featured-collection__image-nav--next-{{ ai_gen_id }} {
    right: 10px;
  }

  .ai-featured-collection__image-indicators-{{ ai_gen_id }} {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 4px;
    z-index: 2;
  }

  .ai-featured-collection__image-indicator-{{ ai_gen_id }} {
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.5);
    transition: background-color 0.3s ease;
  }

  .ai-featured-collection__image-indicator-{{ ai_gen_id }}.active {
    background-color: rgba(255, 255, 255, 1);
  }

  .ai-featured-collection__product-info-{{ ai_gen_id }} {
    padding: {{ block.settings.card_padding }}px;
  }

  .ai-featured-collection__product-title-{{ ai_gen_id }} {
    color: {{ block.settings.product_title_color }};
    font-size: {{ block.settings.product_title_size }}px;
    margin: 0 0 8px;
    text-decoration: none;
  }

  .ai-featured-collection__product-title-{{ ai_gen_id }}:hover {
    text-decoration: underline;
  }

  .ai-featured-collection__product-price-{{ ai_gen_id }} {
    color: {{ block.settings.product_price_color }};
    font-size: {{ block.settings.product_price_size }}px;
    font-weight: 600;
    margin: 0;
  }

  .ai-featured-collection__carousel-nav-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: {{ block.settings.nav_button_color }};
    color: {{ block.settings.nav_button_text_color }};
    border: none;
    border-radius: 50%;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    z-index: 3;
  }

  .ai-featured-collection__carousel-nav-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.nav_button_hover_color }};
    transform: translateY(-50%) scale(1.1);
  }

  .ai-featured-collection__carousel-nav-{{ ai_gen_id }}:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .ai-featured-collection__carousel-nav--prev-{{ ai_gen_id }} {
    left: -24px;
  }

  .ai-featured-collection__carousel-nav--next-{{ ai_gen_id }} {
    right: -24px;
  }

  .ai-featured-collection__view-all-{{ ai_gen_id }} {
    text-align: center;
    margin-top: {{ block.settings.button_spacing }}px;
  }

  .ai-featured-collection__view-all-link-{{ ai_gen_id }} {
    display: inline-block;
    padding: 12px 24px;
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    text-decoration: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    transition: background-color 0.3s ease;
  }

  .ai-featured-collection__view-all-link-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
  }

  @media screen and (max-width: 768px) {
    .ai-featured-collection__product-card-{{ ai_gen_id }} {
      flex: 0 0 calc((100% - {{ block.settings.product_spacing | times: block.settings.products_per_row_mobile | minus: 1 }}px) / {{ block.settings.products_per_row_mobile }});
    }

    .ai-featured-collection__carousel-nav-{{ ai_gen_id }} {
      display: none;
    }
  }
{% endstyle %}

<collection-carousel-{{ ai_gen_id }}
  class="ai-featured-collection-{{ ai_gen_id }}"
  data-products-per-row="{{ block.settings.products_per_row }}"
  data-products-per-row-mobile="{{ block.settings.products_per_row_mobile }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-featured-collection__container-{{ ai_gen_id }}">
    {% if block.settings.heading != blank or block.settings.description != blank %}
      <div class="ai-featured-collection__header-{{ ai_gen_id }}">
        {% if block.settings.heading != blank %}
          <h2 class="ai-featured-collection__title-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
        {% endif %}
        {% if block.settings.description != blank %}
          <div class="ai-featured-collection__description-{{ ai_gen_id }}">{{ block.settings.description }}</div>
        {% endif %}
      </div>
    {% endif %}

    <div class="ai-featured-collection__carousel-container-{{ ai_gen_id }}">
      <button
        class="ai-featured-collection__carousel-nav-{{ ai_gen_id }} ai-featured-collection__carousel-nav--prev-{{ ai_gen_id }}"
        aria-label="Previous products"
        disabled
      >
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="15,18 9,12 15,6"></polyline>
        </svg>
      </button>

      <div class="ai-featured-collection__carousel-{{ ai_gen_id }}">
        {% if block.settings.collection != blank %}
          {% for product in block.settings.collection.products limit: block.settings.products_to_show %}
            <div class="ai-featured-collection__product-card-{{ ai_gen_id }}">
              <div class="ai-featured-collection__product-image-container-{{ ai_gen_id }}" data-product-images>
                {% if product.images.size > 0 %}
                  {% for image in product.images limit: 3 %}
                    <img
                      src="{{ image | image_url: width: 600 }}"
                      alt="{{ image.alt | escape }}"
                      class="ai-featured-collection__product-image-{{ ai_gen_id }}"
                      loading="lazy"
                      {% unless forloop.first %}style="display: none;"{% endunless %}
                    >
                  {% endfor %}

                  {% if product.images.size > 1 %}
                    <button
                      class="ai-featured-collection__image-nav-{{ ai_gen_id }} ai-featured-collection__image-nav--prev-{{ ai_gen_id }}"
                      aria-label="Previous image"
                      data-image-prev
                    >
                      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <polyline points="15,18 9,12 15,6"></polyline>
                      </svg>
                    </button>

                    <button
                      class="ai-featured-collection__image-nav-{{ ai_gen_id }} ai-featured-collection__image-nav--next-{{ ai_gen_id }}"
                      aria-label="Next image"
                      data-image-next
                    >
                      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <polyline points="9,6 15,12 9,18"></polyline>
                      </svg>
                    </button>

                    <div class="ai-featured-collection__image-indicators-{{ ai_gen_id }}">
                      {% for image in product.images limit: 3 %}
                        <div class="ai-featured-collection__image-indicator-{{ ai_gen_id }} {% if forloop.first %}active{% endif %}"></div>
                      {% endfor %}
                    </div>
                  {% endif %}
                {% else %}
                  <div class="ai-featured-collection__product-image-placeholder-{{ ai_gen_id }}">
                    {{ 'product-1' | placeholder_svg_tag }}
                  </div>
                {% endif %}
              </div>

              <div class="ai-featured-collection__product-info-{{ ai_gen_id }}"><a href="{{ product.url }}" class="ai-featured-collection__product-title-{{ ai_gen_id }}">
                  {{ product.title }}
                </a>
                <div class="ai-featured-collection__product-price-{{ ai_gen_id }}">
                  {{ product.price | money }}
                </div>
              </div>
            </div>
          {% endfor %}
        {% else %}
          {% for i in (1..block.settings.products_to_show) %}
            <div class="ai-featured-collection__product-card-{{ ai_gen_id }}">
              <div class="ai-featured-collection__product-image-container-{{ ai_gen_id }}">
                <div class="ai-featured-collection__product-image-placeholder-{{ ai_gen_id }}">
                  {{ 'product-1' | placeholder_svg_tag }}
                </div>
              </div>
              <div class="ai-featured-collection__product-info-{{ ai_gen_id }}">
                <div class="ai-featured-collection__product-title-{{ ai_gen_id }}">Product Title</div>
                <div class="ai-featured-collection__product-price-{{ ai_gen_id }}">$29.99</div>
              </div>
            </div>
          {% endfor %}
        {% endif %}
      </div>

      <button
        class="ai-featured-collection__carousel-nav-{{ ai_gen_id }} ai-featured-collection__carousel-nav--next-{{ ai_gen_id }}"
        aria-label="Next products"
      >
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="9,6 15,12 9,18"></polyline>
        </svg>
      </button>
    </div>

    {% if block.settings.show_view_all and block.settings.collection != blank %}
      <div class="ai-featured-collection__view-all-{{ ai_gen_id }}">
        <a href="{{ block.settings.collection.url }}" class="ai-featured-collection__view-all-link-{{ ai_gen_id }}">
          {{ block.settings.view_all_text }}
        </a>
      </div>
    {% endif %}
  </div>
</collection-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class CollectionCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentIndex = 0;
        this.productsPerRow = parseInt(this.dataset.productsPerRow) || 4;
        this.productsPerRowMobile = parseInt(this.dataset.productsPerRowMobile) || 2;
      }

      connectedCallback() {
        this.carousel = this.querySelector('.ai-featured-collection__carousel-{{ ai_gen_id }}');
        this.prevButton = this.querySelector('.ai-featured-collection__carousel-nav--prev-{{ ai_gen_id }}');
        this.nextButton = this.querySelector('.ai-featured-collection__carousel-nav--next-{{ ai_gen_id }}');
        this.productCards = this.querySelectorAll('.ai-featured-collection__product-card-{{ ai_gen_id }}');

        this.setupCarousel();
        this.setupImageCarousels();
        this.setupEventListeners();
        this.updateNavigation();
      }

      setupCarousel() {
        this.totalProducts = this.productCards.length;
        this.updateProductsPerRow();
      }

      setupImageCarousels() {
        this.productCards.forEach(card => {
          const imageContainer = card.querySelector('[data-product-images]');
          const images = imageContainer.querySelectorAll('.ai-featured-collection__product-image-{{ ai_gen_id }}');
          const prevBtn = imageContainer.querySelector('[data-image-prev]');
          const nextBtn = imageContainer.querySelector('[data-image-next]');
          const indicators = imageContainer.querySelectorAll('.ai-featured-collection__image-indicator-{{ ai_gen_id }}');

          if (images.length <= 1) return;

          let currentImageIndex = 0;

          const showImage = (index) => {
            images.forEach((img, i) => {
              img.style.display = i === index ? 'block' : 'none';
            });
            indicators.forEach((indicator, i) => {
              indicator.classList.toggle('active', i === index);
            });
          };

          if (prevBtn) {
            prevBtn.addEventListener('click', (e) => {
              e.preventDefault();
              currentImageIndex = currentImageIndex > 0 ? currentImageIndex - 1 : images.length - 1;
              showImage(currentImageIndex);
            });
          }

          if (nextBtn) {
            nextBtn.addEventListener('click', (e) => {
              e.preventDefault();
              currentImageIndex = currentImageIndex < images.length - 1 ? currentImageIndex + 1 : 0;
              showImage(currentImageIndex);
            });
          }
        });
      }

      setupEventListeners() {
        this.prevButton.addEventListener('click', () => this.goToPrevious());
        this.nextButton.addEventListener('click', () => this.goToNext());

        window.addEventListener('resize', () => {
          this.updateProductsPerRow();
          this.updateCarousel();
          this.updateNavigation();
        });
      }

      updateProductsPerRow() {
        this.currentProductsPerRow = window.innerWidth <= 768 ? this.productsPerRowMobile : this.productsPerRow;
        this.maxIndex = Math.max(0, this.totalProducts - this.currentProductsPerRow);
      }

      goToPrevious() {
        if (this.currentIndex > 0) {
          this.currentIndex--;
          this.updateCarousel();
          this.updateNavigation();
        }
      }

      goToNext() {
        if (this.currentIndex < this.maxIndex) {
          this.currentIndex++;
          this.updateCarousel();
          this.updateNavigation();
        }
      }

      updateCarousel() {
        const cardWidth = this.productCards[0]?.offsetWidth || 0;
        const gap = parseInt(getComputedStyle(this.carousel).gap) || 0;
        const translateX = -(this.currentIndex * (cardWidth + gap));
        this.carousel.style.transform = `translateX(${translateX}px)`;
      }

      updateNavigation() {
        this.prevButton.disabled = this.currentIndex === 0;
        this.nextButton.disabled = this.currentIndex >= this.maxIndex;
      }
    }

    customElements.define('collection-carousel-{{ ai_gen_id }}', CollectionCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Featured collection",
  "settings": [
    {
      "type": "header",
      "content": "Collection"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 20,
      "step": 1,
      "label": "Products to show",
      "default": 8
    },
    {
      "type": "range",
      "id": "products_per_row",
      "min": 2,
      "max": 6,
      "step": 1,
      "label": "Products per row",
      "default": 4
    },
    {
      "type": "range",
      "id": "products_per_row_mobile",
      "min": 1,
      "max": 3,
      "step": 1,
      "label": "Products per row on mobile",
      "default": 2
    },
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Featured Collection"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {"value": "left", "label": "Left"},
        {"value": "center", "label": "Center"},
        {"value": "right", "label": "Right"}
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "View all button"
    },
    {
      "type": "checkbox",
      "id": "show_view_all",
      "label": "Show view all button",
      "default": true
    },
    {
      "type": "text",
      "id": "view_all_text",
      "label": "Button text",
      "default": "View all"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 60
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 60
    },
    {
      "type": "range",
      "id": "product_spacing",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Product spacing",
      "default": 20
    },
    {
      "type": "range",
      "id": "heading_spacing",
      "min": 20,
      "max": 80,
      "step": 4,
      "unit": "px",
      "label": "Heading spacing",
      "default": 40
    },
    {
      "type": "range",
      "id": "button_spacing",
      "min": 20,
      "max": 80,
      "step": 4,
      "unit": "px",
      "label": "Button spacing",
      "default": 40
    },
    {
      "type": "select",
      "id": "image_aspect_ratio",
      "label": "Image aspect ratio",
      "options": [
        {"value": "1/1", "label": "Square"},
        {"value": "3/4", "label": "Portrait"},
        {"value": "4/3", "label": "Landscape"},
        {"value": "16/9", "label": "Widescreen"}
      ],
      "default": "1/1"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "card_background",
      "label": "Card background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "product_title_color",
      "label": "Product title",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "product_price_color",
      "label": "Product price",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_color",
      "label": "Navigation button",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_text_color",
      "label": "Navigation button text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_button_hover_color",
      "label": "Navigation button hover",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "View all button",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "View all button text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "View all button hover",
      "default": "#333333"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 16
    },
    {
      "type": "range",
      "id": "product_title_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Product title size",
      "default": 16
    },
    {
      "type": "range",
      "id": "product_price_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Product price size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "card_padding",
      "min": 10,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Card padding",
      "default": 16
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 6
    }
  ],
  "presets": [
    {
      "name": "Featured collection"
    }
  ]
}
{% endschema %}